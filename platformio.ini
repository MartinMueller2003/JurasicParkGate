; PlatformIO Project Configuration File for JurasicParkGate
; https://docs.platformio.org/page/projectconf.html
;
; Local configuration should be done in platformio_user.ini

[platformio]
default_envs = esp32_ttgo_t8
src_dir = ./src
data_dir = ./src/data
build_cache_dir = ./.pio/.buildcache
packages_dir = ./.pio/packages
cache_dir = ./.pio/cache
extra_configs = platformio_user.ini

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Baseline build environment                                         ;
; https://docs.platformio.org/en/latest/projectconf/section_env.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
lib_compat_mode = strict
lib_deps =
    adafruit/Adafruit PWM Servo Driver Library @ 2.4.0
    bblanchon/ArduinoJson @ 6.18.5
    bblanchon/StreamUtils @ 1.6.2
    djgrrr/Int64String @ 1.1.1
    https://github.com/esphome/ESPAsyncWebServer#4fd0a1fdf421664214a27373c0eb0247f94b7a79
    ottowinter/AsyncMqttClient-esphome @ 0.8.6
    ; https://github.com/natcl/Artnet                         ; pull latest
    https://github.com/MartinMueller2003/Espalexa           ; pull latest
extra_scripts =
    pre:.scripts/pio-version.py
    .scripts/download_fs.py
    post:.scripts/CopyTargets.py
; build_type = debug
upload_port = com14
monitor_port = com14

lib_ignore =
	ESP Async WebServer	; force the use of the esphome version
	AsyncTCP			; force the use of the esphome version
	LittleFS_esp32		; force the use of the ESP32 built into the core version
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 defaults for 4MB flash                                     ;
; https://docs.platformio.org/en/latest/platforms/espressif32.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32]
board_build.filesystem = littlefs
board_build.partitions = ESP32_partitions.csv
monitor_filters = esp32_exception_decoder
; monitor_filters = esp32_exception_decoder, time
build_flags =
    ${env.build_flags}
    -I ./
    -I ./src
    -I ./src/input
    -I ./src/output
    -I ./src/network
    -I ./src/utility
    -Wl,-Map=firmware.map
    -Wl,--cref
lib_deps =
    ${env.lib_deps}
    esphome/AsyncTCP-esphome @ 1.2.2
extra_scripts = ${env.extra_scripts}
    .scripts/replace_fs.py

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 pulling from upstream core ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32git]
extends = esp32
build_flags = ${esp32.build_flags} -mtext-section-literals
; platform  = https://github.com/platformio/platform-espressif32.git#48c4226e5240c873dae6b28adbb93ad8ca582b5d
platform  = https://github.com/platformio/platform-espressif32.git
platform_packages =
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.9 ;
board_build.arduino.upstream_packages = no

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Build targets (environments) ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;

; ESP32 TTGO-T8 V1.x
[env:esp32_ttgo_t8]
extends = esp32git
board = ttgo-t7-v14-mini32 ; use until platformio adds TTGO-T8
monitor_rts = 0
monitor_dtr = 0
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_ttgo_t8"'
    -D BOARD_ESP32_TTGO_T8
    -D BOARD_HAS_PSRAM
    -D CONFIG_SPIRAM_USE_MALLOC
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw
